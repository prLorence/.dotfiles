exports.default=function(t){var e={};function n(i){if(e[i])return e[i].exports;var o=e[i]={i:i,l:!1,exports:{}};return t[i].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=t,n.c=e,n.d=function(t,e,i){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)n.d(i,o,function(e){return t[e]}.bind(null,o));return i},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=2)}([function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.CODE_MIRROR_SCRIPT_ID=e.MARKDOWN_SCRIPT_ID=e.FOOTNOTE_ITEM_CLASS_NAME=e.FOOTNOTE_ID_PREFIX=e.MAIN_MARK_CLASS_NAME=e.REFERRER_SEARCH_PATTERN_PLACEHOLDER=e.NOTE_SEARCH_PATTERN_PLACEHOLDER=e.URL_FOLD_ICON_SETTING=e.PREVIEWER_URL_BLACKLIST_LOCAL=e.PREVIEWER_URL_BLACKLIST_SETTING=e.URL_ICON_ENABLED_SETTING=e.EXTRA_SYNTAX_ENABLED_SETTING=e.PREVIEWER_HOVER_DELAY_SETTING=e.PREVIEWER_ENABLED_SETTING=e.QUICK_LINK_CREATE_NOTE_SETTING=e.QUICK_LINK_AFTER_COMPLETION_SETTING=e.QUICK_LINK_ELEMENTS_ENABLED_SETTING=e.QUICK_LINK_SHOW_PATH_SETTING=e.QUICK_LINK_SYMBOL_SETTING=e.REFERRER_IDENTIFIER_ENABLED_SETTING=e.REFERRER_PANEL_MENTION_TEXT_MAX_LENGTH=e.REFERRER_PANEL_REFERENCE_EXPAND_SETTING=e.REFERRER_PANEL_STYLESHEET_SETTING=e.REFERRER_PANEL_TITLE_SETTING=e.REFERRER_PANEL_ENABLED_SETTING=e.REFERRER_VIEW_REFERENCE_EXPAND_SETTING=e.REFERRER_AUTO_LIST_POSITION_SETTING=e.REFERRER_ELEMENT_MENTION_TEXT_MAX_LENGTH=e.REFERRER_ELEMENT_NUMBER_TYPE=e.REFERRER_ELEMENT_NUMBER_ENABLED=e.REFERRER_LIST_MENTION_TEXT_MAX_LENGTH=e.REFERRER_LIST_HEADING_SETTING=e.REFERRER_SEARCH_PATTERN_SETTING=e.QUICK_LINK_SEARCH_PATTERN_SETTING=void 0,e.QUICK_LINK_SEARCH_PATTERN_SETTING="QUICK_LINK_SEARCH_PATTERN_SETTING",e.REFERRER_SEARCH_PATTERN_SETTING="REFERRER_SEARCH_PATTERN_SETTING",e.REFERRER_LIST_HEADING_SETTING="REFERRER_LIST_HEADING_SETTING",e.REFERRER_LIST_MENTION_TEXT_MAX_LENGTH="REFERRER_LIST_MENTION_TEXT_MAX_LENGTH",e.REFERRER_ELEMENT_NUMBER_ENABLED="REFERRER_ELEMENT_NUMBER_ENABLED",e.REFERRER_ELEMENT_NUMBER_TYPE="REFERRER_ELEMENT_NUMBER_TYPE",e.REFERRER_ELEMENT_MENTION_TEXT_MAX_LENGTH="REFERRER_ELEMENT_MENTION_TEXT_MAX_LENGTH",e.REFERRER_AUTO_LIST_POSITION_SETTING="REFERRER_AUTO_LIST_POSITION_SETTING",e.REFERRER_VIEW_REFERENCE_EXPAND_SETTING="REFERRER_VIEW_REFERENCE_EXPAND_SETTING",e.REFERRER_PANEL_ENABLED_SETTING="REFERRER_PANEL_ENABLED_SETTING",e.REFERRER_PANEL_TITLE_SETTING="REFERRER_PANEL_TITLE_SETTING",e.REFERRER_PANEL_STYLESHEET_SETTING="REFERRER_PANEL_STYLESHEET_SETTING",e.REFERRER_PANEL_REFERENCE_EXPAND_SETTING="REFERRER_PANEL_REFERENCE_EXPAND_SETTING",e.REFERRER_PANEL_MENTION_TEXT_MAX_LENGTH="REFERRER_PANEL_MENTION_TEXT_MAX_LENGTH",e.REFERRER_IDENTIFIER_ENABLED_SETTING="REFERRER_IDENTIFIER_ENABLED_SETTING",e.QUICK_LINK_SYMBOL_SETTING="QUICK_LINK_SYMBOL_SETTING",e.QUICK_LINK_SHOW_PATH_SETTING="QUICK_LINK_SHOW_PATH_SETTING",e.QUICK_LINK_ELEMENTS_ENABLED_SETTING="QUICK_LINK_ELEMENTS_ENABLED_SETTING",e.QUICK_LINK_AFTER_COMPLETION_SETTING="QUICK_LINK_AFTER_COMPLETION_SETTING",e.QUICK_LINK_CREATE_NOTE_SETTING="QUICK_LINK_CREATE_NOTE_SETTING",e.PREVIEWER_ENABLED_SETTING="PREVIEWER_ENABLED_SETTING",e.PREVIEWER_HOVER_DELAY_SETTING="PREVIEWER_HOVER_DELAY_SETTING",e.EXTRA_SYNTAX_ENABLED_SETTING="EXTRA_SYNTAX_ENABLED_SETTING",e.URL_ICON_ENABLED_SETTING="URL_ICON_ENABLED_SETTING",e.PREVIEWER_URL_BLACKLIST_SETTING="PREVIEWER_URL_BLACKLIST_SETTING",e.PREVIEWER_URL_BLACKLIST_LOCAL="joplin",e.URL_FOLD_ICON_SETTING="URL_FOLD_ICON_SETTING",e.NOTE_SEARCH_PATTERN_PLACEHOLDER="$keyword",e.REFERRER_SEARCH_PATTERN_PLACEHOLDER="$noteId",e.MAIN_MARK_CLASS_NAME="note-link-mark-main",e.FOOTNOTE_ID_PREFIX="fnref",e.FOOTNOTE_ITEM_CLASS_NAME="footnote-item",e.MARKDOWN_SCRIPT_ID="ylc395.noteLinkSystem.MARKDOWN_SCRIPT_ID",e.CODE_MIRROR_SCRIPT_ID="ylc395.noteLinkSystem.CODE_MIRROR_SCRIPT_ID"},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.FoldUrlIconType=e.ActionAfterCompletion=void 0,function(t){t[t.MoveCursorToEnd=0]="MoveCursorToEnd",t[t.SelectText=1]="SelectText"}(e.ActionAfterCompletion||(e.ActionAfterCompletion={})),function(t){t[t.None=0]="None",t[t.Ellipsis=1]="Ellipsis",t[t.Icon=2]="Icon"}(e.FoldUrlIconType||(e.FoldUrlIconType={}))},function(t,e,n){"use strict";var i=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const o=i(n(3)),r=i(n(10)),s=i(n(16));e.default=function(t){return{plugin:function(e){e.defineOption("noteLinkSystem",!1,n=>{new o.default(t,n,e),new r.default(t,n);const i=new s.default(n);e.defineExtension("setElementId",i.setElementId.bind(i))})},codeMirrorOptions:{noteLinkSystem:!0},codeMirrorResources:["addon/hint/show-hint"],assets:()=>[{name:"./style.css"}]}}},function(t,e,n){"use strict";var i=this&&this.__awaiter||function(t,e,n,i){return new(n||(n=Promise))((function(o,r){function s(t){try{E(i.next(t))}catch(t){r(t)}}function l(t){try{E(i.throw(t))}catch(t){r(t)}}function E(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(s,l)}E((i=i.apply(t,e||[])).next())}))},o=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const r=o(n(4)),s=o(n(5)),l=o(n(6)),E=o(n(7)),c=o(n(8)),a=o(n(9)),h=n(0),_=n(1);e.default=class{constructor(t,e,n){this.context=t,this.editor=e,this.cm=n,this.doc=this.editor.getDoc(),this.editor.on("cursorActivity",this.triggerHints.bind(this)),setTimeout(this.init.bind(this),100)}init(){return i(this,void 0,void 0,(function*(){this.triggerSymbol=yield this.context.postMessage({event:"querySetting",payload:{key:h.QUICK_LINK_SYMBOL_SETTING}}),this.triggerSymbol&&(this.linkToElementEnabled=yield this.context.postMessage({event:"querySetting",payload:{key:h.QUICK_LINK_ELEMENTS_ENABLED_SETTING}}),this.actionAfterCompletion=yield this.context.postMessage({event:"querySetting",payload:{key:h.QUICK_LINK_AFTER_COMPLETION_SETTING}}),this.createNoteEnabled=yield this.context.postMessage({event:"querySetting",payload:{key:h.QUICK_LINK_CREATE_NOTE_SETTING}}))}))}isUrlToken(){var t;return(null===(t=this.editor.getTokenTypeAt(this.editor.getCursor()))||void 0===t?void 0:t.includes("string url"))||!1}triggerHints(){if(!this.triggerSymbol)return;const t=this.doc.getCursor(),e=[{line:t.line,ch:t.ch-this.triggerSymbol.length},t];this.doc.getRange(...e)===this.triggerSymbol&&(this.symbolRange={from:e[0],to:e[1]},this.isUrlOnly=this.isUrlToken(),this.editor.showHint({closeCharacters:/[()\[\]{};:>,]/,closeOnUnfocus:!0,completeSingle:!1,hint:this.getNoteCompletion.bind(this)}))}getElementsList(t,e){return i(this,void 0,void 0,(function*(){const n=yield this.context.postMessage({event:"fetchNoteHtml",payload:{id:t}}),i=(new DOMParser).parseFromString(n,"text/html"),o=t=>["H1","H2","H3","H4","H5","H6"].includes(t.tagName);return[...i.querySelectorAll("[id]")].filter(t=>!function(t){return t.id.startsWith(h.FOOTNOTE_ID_PREFIX)||t.classList.contains(h.FOOTNOTE_ITEM_CLASS_NAME)}(t)).map((t,n,i)=>{const a=o(t)?Number(t.tagName[1]):(()=>{for(let t=n;i[t];t--)if(o(i[t]))return Number(i[t].tagName[1]);return 1})(),h=(()=>{if(!o(t))return c.default;switch(a){case 1:return r.default;case 2:return s.default;case 3:return l.default;default:return E.default}})();return{text:e?`[${t.id}](#${t.id})`:"#"+t.id,className:"note-link-hint",elId:t.id,render:e=>{e.innerHTML=`${" ".repeat(a-1)}${h}${t.id}`}}})}))}hintForElements({id:t,title:e},n,o){return i(this,void 0,void 0,(function*(){if(!this.symbolRange)throw new Error("no symbol");const i=!n,r=yield this.getElementsList(t,i);if(0===r.length)return void(o&&this.afterCompletion(o));const s=n||this.symbolRange.to,l=n||this.symbolRange.from;this.editor.showHint({completeSingle:!1,closeCharacters:/[()\[\]{};:>,]/,closeOnUnfocus:!0,hint:()=>{if(!i&&!this.isUrlToken())return;const n=this.doc.getCursor(),o=this.doc.getRange(s,n),E=r.findIndex(({text:t})=>t.slice(1).includes(o));if(E<0)return;const c={from:l,to:n,list:r,selectedHint:E},a=()=>{if(!this.symbolRange)throw new Error("no symbolRange");const{from:t}=this.symbolRange;i||o||this.afterCompletion([{line:t.line,ch:t.ch+1},{line:t.line,ch:t.ch+1+e.length}])};return this.cm.on(c,"close",a),this.cm.on(c,"pick",({text:n,elId:o})=>{this.cm.off(c,"close",a);const{line:r,ch:s}=this.doc.getCursor();if(i)return void this.afterCompletion([{line:r,ch:s-n.length+1},{line:r,ch:s-`](#${o})`.length}]);const l=s-`(:/${t}${n})`.length;this.isUrlOnly||this.doc.replaceRange(n,{line:r,ch:l}),this.afterCompletion([{line:r,ch:l-e.length},{line:r,ch:l+n.length}])}),c}})}))}afterCompletion(t){const{line:e,ch:n}=this.doc.getCursor();this.actionAfterCompletion===_.ActionAfterCompletion.MoveCursorToEnd||this.isUrlOnly?this.doc.setCursor({line:e,ch:n+1}):this.actionAfterCompletion===_.ActionAfterCompletion.SelectText&&this.doc.setSelection(...t)}getNewNoteHints(t){const e=e=>{if(!this.symbolRange)throw new Error("no symbolRange");const{from:n,to:i}=this.symbolRange;if(this.isUrlOnly){const t=this.editor.getTokenAt(n);this.doc.replaceRange(":/"+e.id,{line:n.line,ch:t.start},{line:n.line,ch:t.end})}else this.doc.replaceRange(`[${e.title}](:/${e.id})`,n,{line:i.line,ch:i.ch+t.length});this.afterCompletion([{line:n.line,ch:n.ch+1},{line:n.line,ch:n.ch+1+e.title.length}])},n=n=>()=>i(this,void 0,void 0,(function*(){const i=yield this.context.postMessage({event:"createNote",payload:{title:t,type:n}});e(i)}));return[{className:"note-link-hint",text:"",render:e=>e.innerHTML=`${a.default}new Note: ${t}`,hint:n("note")},{text:"",className:"note-link-hint",render:e=>e.innerHTML=`${a.default}new Todo: ${t}`,hint:n("todo")}]}getNoteCompletion(){return i(this,void 0,void 0,(function*(){if(!this.symbolRange)throw new Error("no symbolRange");const{line:t,ch:e}=this.symbolRange.to,{line:n,ch:i}=this.doc.getCursor();if(n<t||i<e)return;const o=this.doc.getRange({line:t,ch:e},{line:n,ch:i}),r=o&&this.createNoteEnabled,s=(yield this.context.postMessage({event:"searchNotes",payload:{keyword:o}})).map(t=>Object.assign({text:this.isUrlOnly?":/"+t.id:`[${t.title}](:/${t.id})`,className:"note-link-hint",render(e){e.innerHTML=t.title+(t.isCurrent?'<span class="note-link-hint-self">SELF</span>':t.path?`<span class="note-link-hint-path">${t.path}</span>`:"")},note:t},t.isCurrent?{hint:()=>this.hintForElements(t)}:null)),{from:l}=this.symbolRange,E={line:t,ch:e+o.length},c={from:l,to:E,list:s.concat(r?this.getNewNoteHints(o):[])};return this.cm.on(c,"pick",t=>{if(!function(t){return"note"in t}(t)||t.note.isCurrent)return;const e={line:E.line,ch:l.ch+t.text.length-1};if(this.isUrlOnly){const o=this.editor.getTokenAt({line:n,ch:i});this.doc.replaceRange(t.text,{line:E.line,ch:o.start},{line:E.line,ch:o.end}),e.ch=o.start+t.text.length}const o=[{line:E.line,ch:l.ch+1},{line:E.line,ch:l.ch+t.note.title.length+1}];this.linkToElementEnabled?(this.doc.setCursor(e),this.hintForElements(t.note,e,o)):this.afterCompletion(o)}),c}))}}},function(t,e){t.exports='<svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" class="bi bi-type-h1" viewBox="0 0 16 16"><path d="M8.637 13V3.669H7.379V7.62H2.758V3.67H1.5V13h1.258V8.728h4.62V13h1.259zm5.329 0V3.669h-1.244L10.5 5.316v1.265l2.16-1.565h.062V13h1.244z"></path></svg>'},function(t,e){t.exports='<svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" class="bi bi-type-h2" viewBox="0 0 16 16"><path d="M7.638 13V3.669H6.38V7.62H1.759V3.67H.5V13h1.258V8.728h4.62V13h1.259zm3.022-6.733v-.048c0-.889.63-1.668 1.716-1.668.957 0 1.675.608 1.675 1.572 0 .855-.554 1.504-1.067 2.085l-3.513 3.999V13H15.5v-1.094h-4.245v-.075l2.481-2.844c.875-.998 1.586-1.784 1.586-2.953 0-1.463-1.155-2.556-2.919-2.556-1.941 0-2.966 1.326-2.966 2.74v.049h1.223z"></path></svg>'},function(t,e){t.exports='<svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" class="bi bi-type-h3" viewBox="0 0 16 16"><path d="M7.637 13V3.669H6.379V7.62H1.758V3.67H.5V13h1.258V8.728h4.62V13h1.259zm3.625-4.272h1.018c1.142 0 1.935.67 1.949 1.674.013 1.005-.78 1.737-2.01 1.73-1.08-.007-1.853-.588-1.935-1.32H9.108c.069 1.327 1.224 2.386 3.083 2.386 1.935 0 3.343-1.155 3.309-2.789-.027-1.51-1.251-2.16-2.037-2.249v-.068c.704-.123 1.764-.91 1.723-2.229-.035-1.353-1.176-2.4-2.954-2.385-1.873.006-2.857 1.162-2.898 2.358h1.196c.062-.69.711-1.299 1.696-1.299.998 0 1.695.622 1.695 1.525.007.922-.718 1.592-1.695 1.592h-.964v1.074z"></path></svg>'},function(t,e){t.exports='<svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" class="bi bi-card-heading" viewBox="0 0 16 16"><path d="M14.5 3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-13a.5.5 0 0 1-.5-.5v-9a.5.5 0 0 1 .5-.5h13zm-13-1A1.5 1.5 0 0 0 0 3.5v9A1.5 1.5 0 0 0 1.5 14h13a1.5 1.5 0 0 0 1.5-1.5v-9A1.5 1.5 0 0 0 14.5 2h-13z"></path><path d="M3 8.5a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5zm0 2a.5.5 0 0 1 .5-.5h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1-.5-.5zm0-5a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-9a.5.5 0 0 1-.5-.5v-1z"></path></svg>'},function(t,e){t.exports='<svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" class="bi bi-box" viewBox="0 0 16 16"><path d="M8.186 1.113a.5.5 0 0 0-.372 0L1.846 3.5 8 5.961 14.154 3.5 8.186 1.113zM15 4.239l-6.5 2.6v7.922l6.5-2.6V4.24zM7.5 14.762V6.838L1 4.239v7.923l6.5 2.6zM7.443.184a1.5 1.5 0 0 1 1.114 0l7.129 2.852A.5.5 0 0 1 16 3.5v8.662a1 1 0 0 1-.629.928l-7.185 2.874a.5.5 0 0 1-.372 0L.63 13.09a1 1 0 0 1-.63-.928V3.5a.5.5 0 0 1 .314-.464L7.443.184z"></path></svg>'},function(t,e){t.exports='<svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" class="bi bi-file-earmark-plus" viewBox="0 0 16 16"><path d="M8 6.5a.5.5 0 0 1 .5.5v1.5H10a.5.5 0 0 1 0 1H8.5V11a.5.5 0 0 1-1 0V9.5H6a.5.5 0 0 1 0-1h1.5V7a.5.5 0 0 1 .5-.5z"></path><path d="M14 4.5V14a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2h5.5L14 4.5zm-3 0A1.5 1.5 0 0 1 9.5 3V1H4a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V4.5h-2z"></path></svg>'},function(t,e,n){"use strict";var i=this&&this.__awaiter||function(t,e,n,i){return new(n||(n=Promise))((function(o,r){function s(t){try{E(i.next(t))}catch(t){r(t)}}function l(t){try{E(i.throw(t))}catch(t){r(t)}}function E(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(s,l)}E((i=i.apply(t,e||[])).next())}))},o=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const r=o(n(11)),s=n(0),l=n(1),E=n(12);function c(t,e){const n=e[t-1],i=e[t-2];return!(!n||!i)&&(" "===n.string&&"]:"===i.string)}e.default=class{constructor(t,e){this.context=t,this.editor=e,setTimeout(this.init.bind(this),100)}init(){return i(this,void 0,void 0,(function*(){this.foldType=yield this.context.postMessage({event:"querySetting",payload:{key:s.URL_FOLD_ICON_SETTING}}),this.foldType!==l.FoldUrlIconType.None&&(this.foldAll(),this.editor.on("cursorActivity",this.unfoldAtCursor.bind(this)),this.editor.on("cursorActivity",r.default(this.foldAll.bind(this),200)))}))}foldAll(){return i(this,void 0,void 0,(function*(){const t=this.editor.getDoc(),e=this.editor.getCursor(),n=this.editor.getTokenTypeAt(e);t.eachLine(i=>{var o;const r=t.getLineNumber(i);if(null===r)return;const s=this.editor.getLineTokens(r);for(const[i,l]of s.entries())(null===(o=l.type)||void 0===o?void 0:o.includes("string url"))&&1!==l.string.length&&(this.editor.findMarksAt({line:r,ch:l.start}).find(t=>"note-link-folded-url"===t.className)||c(i,s)||(null==n?void 0:n.includes("string url"))&&e.line===r&&e.ch<=l.end&&e.ch>=l.start||t.markText({line:r,ch:l.start},{line:r,ch:l.end},{replacedWith:this.createFoldMarker(l.string),handleMouseEvents:!0,className:"note-link-folded-url"}))})}))}unfoldAtCursor(){const t=this.editor.getCursor(),e=this.editor.findMarksAt(t);for(const t of e)"note-link-folded-url"===t.className&&t.clear()}createFoldMarker(t){const e=document.createElement("span");if(e.classList.add("note-link-folded-url"),this.foldType===l.FoldUrlIconType.Ellipsis&&e.classList.add("fa","fa-ellipsis-h","fa-xs"),this.foldType===l.FoldUrlIconType.Icon)if(t.startsWith(":/")){const t=document.createElement("span");t.classList.add("note-link-joplin-icon"),e.appendChild(t)}else new E.UrlIcon(t,e);return e}}},function(t,e){var n=/^\s+|\s+$/g,i=/^[-+]0x[0-9a-f]+$/i,o=/^0b[01]+$/i,r=/^0o[0-7]+$/i,s=parseInt,l="object"==typeof global&&global&&global.Object===Object&&global,E="object"==typeof self&&self&&self.Object===Object&&self,c=l||E||Function("return this")(),a=Object.prototype.toString,h=Math.max,_=Math.min,T=function(){return c.Date.now()};function u(t){var e=typeof t;return!!t&&("object"==e||"function"==e)}function R(t){if("number"==typeof t)return t;if(function(t){return"symbol"==typeof t||function(t){return!!t&&"object"==typeof t}(t)&&"[object Symbol]"==a.call(t)}(t))return NaN;if(u(t)){var e="function"==typeof t.valueOf?t.valueOf():t;t=u(e)?e+"":e}if("string"!=typeof t)return 0===t?t:+t;t=t.replace(n,"");var l=o.test(t);return l||r.test(t)?s(t.slice(2),l?2:8):i.test(t)?NaN:+t}t.exports=function(t,e,n){var i,o,r,s,l,E,c=0,a=!1,d=!1,f=!0;if("function"!=typeof t)throw new TypeError("Expected a function");function N(e){var n=i,r=o;return i=o=void 0,c=e,s=t.apply(r,n)}function I(t){return c=t,l=setTimeout(p,e),a?N(t):s}function g(t){var n=t-E;return void 0===E||n>=e||n<0||d&&t-c>=r}function p(){var t=T();if(g(t))return L(t);l=setTimeout(p,function(t){var n=e-(t-E);return d?_(n,r-(t-c)):n}(t))}function L(t){return l=void 0,f&&i?N(t):(i=o=void 0,s)}function S(){var t=T(),n=g(t);if(i=arguments,o=this,E=t,n){if(void 0===l)return I(E);if(d)return l=setTimeout(p,e),N(E)}return void 0===l&&(l=setTimeout(p,e)),s}return e=R(e)||0,u(n)&&(a=!!n.leading,r=(d="maxWait"in n)?h(R(n.maxWait)||0,e):r,f="trailing"in n?!!n.trailing:f),S.cancel=function(){void 0!==l&&clearTimeout(l),c=0,i=E=o=l=void 0},S.flush=function(){return void 0===l?s:L(T())},S}},function(t,e,n){"use strict";var i=this&&this.__awaiter||function(t,e,n,i){return new(n||(n=Promise))((function(o,r){function s(t){try{E(i.next(t))}catch(t){r(t)}}function l(t){try{E(i.throw(t))}catch(t){r(t)}}function E(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(s,l)}E((i=i.apply(t,e||[])).next())}))},o=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0}),e.UrlIcon=void 0;const r=o(n(13)),s=o(n(14)),l=n(15);class E{constructor(t,e){this.href=t,this.containerEl=e,this.pageUrl=l.getRemoteUrl(this.href);try{this.origin=new URL(this.pageUrl).origin}catch(t){this.origin=""}this.iconEl=this.createIconEl(),this.loadIcon()}get faviconUrl(){return this.origin+"/favicon.ico"}isHash(){return this.href.startsWith("#")&&this.href.length>1}createIconEl(){const t=this.containerEl.querySelector(".note-link-external-website-icon");t&&t.remove();const e=document.createElement("span");return e.innerHTML=this.isHash()?s.default:r.default,e.classList.add("note-link-external-website-icon"),this.containerEl.prepend(e),e}setIconUrl(t){const e=document.createElement("img");e.src=t,this.iconEl.innerHTML=e.outerHTML,this.iconUrl=t}loadIcon(){return i(this,void 0,void 0,(function*(){if(!this.origin||this.isHash())return;const t=E.getIconKey(this.origin),e=localStorage.getItem(t);if("DEFAULT"===e)return;let n;this.abortController=new AbortController;try{n=yield fetch(e||this.faviconUrl,{signal:this.abortController.signal})}catch(t){return}if(200===n.status){const t=yield n.blob();if(t.type.includes("image"))return void this.setIconUrl(URL.createObjectURL(t))}try{const e=yield fetch(this.pageUrl,{signal:this.abortController.signal}),n=yield e.text(),i=l.parseHtml(n).querySelector('link[rel="icon"]');if(!i)throw new Error("no icon linkEl");const o=new URL(i.getAttribute("href"),this.pageUrl).toString(),r=yield fetch(o,{signal:this.abortController.signal,redirect:"error"});if(200!==r.status)throw new Error("fetch icon failed");const s=yield r.blob();if(!s.type.includes("image"))throw new Error("fetch icon failed");{const e=URL.createObjectURL(s);this.setIconUrl(e),localStorage.setItem(t,e)}}catch(e){localStorage.setItem(t,"DEFAULT")}this.abortController=void 0}))}destroy(){this.abortController&&this.abortController.abort(),this.iconUrl&&URL.revokeObjectURL(this.iconUrl)}static getIconKey(t){return"note-link-system-icon-url-"+t}}e.UrlIcon=E},function(t,e){t.exports='<svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" class="bi bi-globe" viewBox="0 0 16 16"><path d="M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8zm7.5-6.923c-.67.204-1.335.82-1.887 1.855A7.97 7.97 0 0 0 5.145 4H7.5V1.077zM4.09 4a9.267 9.267 0 0 1 .64-1.539 6.7 6.7 0 0 1 .597-.933A7.025 7.025 0 0 0 2.255 4H4.09zm-.582 3.5c.03-.877.138-1.718.312-2.5H1.674a6.958 6.958 0 0 0-.656 2.5h2.49zM4.847 5a12.5 12.5 0 0 0-.338 2.5H7.5V5H4.847zM8.5 5v2.5h2.99a12.495 12.495 0 0 0-.337-2.5H8.5zM4.51 8.5a12.5 12.5 0 0 0 .337 2.5H7.5V8.5H4.51zm3.99 0V11h2.653c.187-.765.306-1.608.338-2.5H8.5zM5.145 12c.138.386.295.744.468 1.068.552 1.035 1.218 1.65 1.887 1.855V12H5.145zm.182 2.472a6.696 6.696 0 0 1-.597-.933A9.268 9.268 0 0 1 4.09 12H2.255a7.024 7.024 0 0 0 3.072 2.472zM3.82 11a13.652 13.652 0 0 1-.312-2.5h-2.49c.062.89.291 1.733.656 2.5H3.82zm6.853 3.472A7.024 7.024 0 0 0 13.745 12H11.91a9.27 9.27 0 0 1-.64 1.539 6.688 6.688 0 0 1-.597.933zM8.5 12v2.923c.67-.204 1.335-.82 1.887-1.855.173-.324.33-.682.468-1.068H8.5zm3.68-1h2.146c.365-.767.594-1.61.656-2.5h-2.49a13.65 13.65 0 0 1-.312 2.5zm2.802-3.5a6.959 6.959 0 0 0-.656-2.5H12.18c.174.782.282 1.623.312 2.5h2.49zM11.27 2.461c.247.464.462.98.64 1.539h1.835a7.024 7.024 0 0 0-3.072-2.472c.218.284.418.598.597.933zM10.855 4a7.966 7.966 0 0 0-.468-1.068C9.835 1.897 9.17 1.282 8.5 1.077V4h2.355z"></path></svg>'},function(t,e){t.exports='<svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" class="bi bi-hash" viewBox="0 0 16 16"><path d="M8.39 12.648a1.32 1.32 0 0 0-.015.18c0 .305.21.508.5.508.266 0 .492-.172.555-.477l.554-2.703h1.204c.421 0 .617-.234.617-.547 0-.312-.188-.53-.617-.53h-.985l.516-2.524h1.265c.43 0 .618-.227.618-.547 0-.313-.188-.524-.618-.524h-1.046l.476-2.304a1.06 1.06 0 0 0 .016-.164.51.51 0 0 0-.516-.516.54.54 0 0 0-.539.43l-.523 2.554H7.617l.477-2.304c.008-.04.015-.118.015-.164a.512.512 0 0 0-.523-.516.539.539 0 0 0-.531.43L6.53 5.484H5.414c-.43 0-.617.22-.617.532 0 .312.187.539.617.539h.906l-.515 2.523H4.609c-.421 0-.609.219-.609.531 0 .313.188.547.61.547h.976l-.516 2.492c-.008.04-.015.125-.015.18 0 .305.21.508.5.508.265 0 .492-.172.554-.477l.555-2.703h2.242l-.515 2.492zm-1-6.109h2.266l-.515 2.563H6.859l.532-2.563z"></path></svg>'},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.getRemoteUrl=e.parseHtml=void 0,e.parseHtml=function(t){return(new DOMParser).parseFromString(t,"text/html")},e.getRemoteUrl=function(t){return t.startsWith("http://")||t.startsWith("https://")?t:"https://"+t}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});e.default=class{constructor(t){this.editor=t,this.doc=this.editor.getDoc()}setElementId(){const[t]=this.doc.listSelections(),{anchor:e,head:n}=t;if(this.editor.focus(),e.line!==n.line)return;const i=e.line;if(e.ch===n.ch){const t="id-of-block",e=this.doc.getLine(i);this.doc.replaceRange(` {#${t}}`,{line:i,ch:e.length}),this.doc.setSelection({line:i,ch:e.length+" {#".length},{line:i,ch:e.length+(" {#"+t).length})}else{const t="id-of-element",o=this.doc.getRange({line:i,ch:e.ch},{line:i,ch:n.ch});this.doc.replaceRange(`[${o}]{#${t}}`,{line:i,ch:e.ch},{line:i,ch:n.ch}),this.doc.setSelection({line:i,ch:e.ch+`[${o}]{#`.length},{line:i,ch:e.ch+` [${o}]{#${t}`.length-1})}}}}]).default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,