
# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3/sway config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

input type:pointer {
        accel_profile flat
        pointer_accel -0.4
}

input type:touchpad {
        natural_scroll enabled
        accel_profile flat
}

input type:keyboard {
    repeat_delay 200
    repeat_rate 30
}

bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle

bindsym XF86MonBrightnessDown exec brightnessctl set 5%-
bindsym XF86MonBrightnessUp exec brightnessctl set 5%+

bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

bindsym XF86Search exec bemenu-run

set $mod Mod4

output "*" bg "/home/phetoush/Pictures/Wallpapers/wavy-wallpaper.jpg" stretch

# set $brightness /home/phetoush/github_repos/tools/ybacklight/src/ybacklight -get

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
# font pango:monospace 8
# font pango:DroidSans Mono Nerd Font: 5

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
# font pango:DejaVu Sans Mono 8
font pango:JetBrainsMono Nerd Font Mono 8

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
# exec --no-startup-id dex --autostart --environment i3

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
# exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet


# Use pactl to adjust volume in PulseAudio.
# set $refresh_i3status killall -SIGUSR1 i3status

# bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
# bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
# bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
# bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal with a tmux session attached
bindsym $mod+Return exec kitty -e tmux

# start a normal terminal
bindsym $mod+Shift+Return exec kitty

# kill focused window
bindsym $mod+q kill

# start dmenu (a program launcher)
# bindsym $mod+r exec --no-startup-id dmenu_run
# A more modernkdmenu replacement is rofi:
# bindsym $mod+r exec "rofi -show run"

bindsym $mod+r exec fuzzel

# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindsym $mod+r exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
# bindsym $mod+h split h

# split in vertical orientation
# bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
# bindsym $mod+s layout stacking
bindsym $mod+w layout toggle tabbed split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym Ctrl+Shift+r restart
# exit i3 (logs you out of your X session)
# bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"
# bindsym $mod+Shift+e exec wlogout

bindsym $mod+Shift+r mode "resize"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym Minus resize shrink width 10 px or 10 ppt
        bindsym Equal resize grow width 10 px or 10 ppt
        bindsym j resize shrink height 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        swaybar_command waybar
        position top

        tray_output primary

        strip_workspace_numbers yes

        bindsym button4 nop
        bindsym button5 nop
        bindsym button6 nop
        bindsym button7 nop
}

# Application Shortcuts
bindsym $mod+b exec firefoz
bindsym $mod+m exec "spotify-launcher --skip-update"
bindsym $mod+d exec webcord
bindsym $mod+n exec "SSH_AUTH_SOCK=$XDG_RUNTIME_DIR/ssh-agent.socket obsidian"
bindsym $mod+i exec XDG_CURRENT_DESKTOP="gnome" gnome-control-center

bindsym $mod+Shift+s exec grim -g "$(slurp)" - | swappy -f -

bindsym Ctrl+$mod+v exec pavucontrol 

bindsym $mod+v exec "cliphist list | fuzzel --dmenu | cliphist decode | wl-copy"

bindsym $mod+Period exec "pkill fuzzel || ~/.local/bin/fuzzel-emoji"

# bindsym $mod+p exec "~/.config/polybar/material/scripts/powermenu.sh"
# bindsym $mod+v exec "klipper"
# bindsym Shift+Print exec "spectacle -r"

# set up polybar
# exec --no-startup-id "bash ~/.config/polybar/launch.sh --material"

# no border
smart_borders on
default_border pixel 3

# window title alignment
title_align center

# changes focus on window color
# class                 border  backgr. text    indicator 
client.focused 		#404258 #404258 #adcce8 #404258   
client.unfocused 	#000000 #191817 #F9F3E9

# window gaps
gaps inner 5
smart_gaps on

for_window [shell="xwayland"] title_format "[XWayland] %title"

# exec_always killall swayidle; exec swayidle -w \
#   timeout 600 'swaylock -f -c 000000' \
#   timeout 600 'swaymsg "output * power off"' \
#   before-sleep 'playerctl pause' \
#   before-sleep 'swaylock -f -c 000000' \
#   before-sleep 'swaymsg "output * power off"' \
#   unlock 'swaymsg "output * power on"' \
#   after-resume 'swaymsg "output * power on"'

set $power_control Power control: [l]ock, [e]xit, [s]uspend, [r]eboot, [p]ower off

mode "$power_control" {
  bindsym l exec swaylock -f -c 000000, mode default
  bindsym e exec swaymsg exit, mode default
  bindsym s exec swaylock -f -c 000000 && systemctl suspend, mode default
  bindsym r exec reboot, mode default
  bindsym p exec poweroff, mode default

  bindsym Escape mode default
}

bindsym $mod+Shift+e mode "$power_control"

# launches swaylock before sleeping
bindswitch --reload --locked lid:on exec swaylock -f -c 000000 & systemctl suspend

exec_always pkill wl-paste; exec wl-paste --watch cliphist store
exec_always pkill kanshi; exec kanshi -c $HOME/.config/kanshi/config
exec --no-startup-id enablescreenshare.sh
# exec_always pkill ssh-agent; exec eval "$(ssh-agent -s)"
# exec "/usr/lib/xdg-desktop-portal -r & /usr/lib/xdg-desktop-portal-wlr"
